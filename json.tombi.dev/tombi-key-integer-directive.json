{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TombiValueDirectiveContent",
  "type": "object",
  "properties": {
    "lint": {
      "title": "Linter directive.",
      "anyOf": [
        {
          "$ref": "#/definitions/LintOptions"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "LintOptions": {
      "type": "object",
      "properties": {
        "rules": {
          "title": "Lint rules.",
          "anyOf": [
            {
              "$ref": "#/definitions/WithKeyRules"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "WithKeyRules": {
      "type": "object",
      "properties": {
        "key-empty": {
          "title": "Key empty.",
          "description": "Check if the key is empty.\n\n```toml\n# VALID BUT DISCOURAGED\n\"\" = true\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultWarn"
            },
            {
              "type": "null"
            }
          ]
        },
        "key-required": {
          "title": "Key required.",
          "description": "Check if the key is required in this Table.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "key-not-allowed": {
          "title": "Key not allowed.",
          "description": "Check if the key is not defined in this Table.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "key-pattern": {
          "title": "Key pattern.",
          "description": "Check if the key matches the pattern in the Schema.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "type-mismatch": {
          "description": "Type mismatch\n\nCheck if the value is of the correct type.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "const-value": {
          "description": "Const value\n\nCheck if the value is equal to the const value.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "enumerate": {
          "description": "Enumerate\n\nCheck if the value is one of the values in the enumerate.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "deprecated": {
          "description": "Deprecated\n\nCheck if the value is deprecated.",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultWarn"
            },
            {
              "type": "null"
            }
          ]
        },
        "integer-maximum": {
          "title": "Maximum integer.",
          "description": "Check if the integer is less than or equal to the maximum.\n\n```rust\ninteger <= maximum\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "integer-minimum": {
          "title": "Minimum integer.",
          "description": "Check if the integer is greater than or equal to the minimum.\n\n```rust\ninteger >= minimum\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "integer-exclusive-maximum": {
          "title": "Exclusive maximum integer.",
          "description": "Check if the integer is less than the maximum.\n\n```rust\ninteger < maximum\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "integer-exclusive-minimum": {
          "title": "Exclusive minimum integer.",
          "description": "Check if the integer is greater than the minimum.\n\n```rust\ninteger > minimum\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        },
        "integer-multiple-of": {
          "title": "Multiple of integer.",
          "description": "Check if the integer is a multiple of the value.\n\n```rust\ninteger % multiple_of == 0\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultError"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "ascending"
    },
    "SeverityLevelDefaultWarn": {
      "default": "warn",
      "allOf": [
        {
          "$ref": "#/definitions/SeverityLevel"
        }
      ]
    },
    "SeverityLevel": {
      "oneOf": [
        {
          "title": "Disable the Rule.",
          "type": "string",
          "const": "off"
        },
        {
          "title": "Display as Warning.",
          "type": "string",
          "const": "warn"
        },
        {
          "title": "Display as Error.",
          "type": "string",
          "const": "error"
        }
      ]
    },
    "SeverityLevelDefaultError": {
      "default": "error",
      "allOf": [
        {
          "$ref": "#/definitions/SeverityLevel"
        }
      ]
    }
  }
}
